#列表操作.py
names=['Tom','Jack','Join','Jary']
print(names)
#赋值
names[1]='Fam'
print(names)
#删除
del names[3]
print(names)
#分片赋值
name=list("Perl")
print(name)
name[2:]=list("ar")
print(name)
#分片赋值插入
name[3:3]=list("Python")
print(name)
#分片赋值删除
name[0:3]=[]
print(name)

lst=[1,2,3]
#列表末尾追加
lst.append(4)
print(lst)
#统计出现次数
n=lst.count(3)
print(n)
#扩展列表
b=[5,6,7]
lst.extend(b)
print(lst)
#列表连接，新建了副本，效率低
a=[1,2,3,4]
c=a+b
print(a)
print(c)
#分片赋值
a[len(a):0]=b
print(a)
print(names.index('Tom'))
#print(names.index('tom'))#引发异常
#插入元素
lst.insert(3,100)
print(lst)
lst[3:3]=[200]
print(lst)
#删除元素
lst.pop()
print(lst)
print(lst.pop(3))
print(lst)
#移除元素
lst.remove(100)
print(lst)
#反向存放
lst.reverse()
print(lst)
#返回反向迭代器
x=[1,2,3]
y=list(reversed(x))
print(y)
#排序
x=[4,5,67,3,4,0,1]
y=x.sort()
print(x)
print(y)

x=[6,54,3,2,1]
y=x[:]#赋值副本
y.sort()
print(x)
print(y)
z=sorted(x)#返回一个列表
print(x)
print(z)
print(sorted(x).reverse())

import operator
print(operator.ge(2,9))
print(operator.ge(2,2))
print(operator.le(11,9))
print(operator.eq(2,2))

